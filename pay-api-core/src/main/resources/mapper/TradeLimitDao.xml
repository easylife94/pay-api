<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pay.api.core.dao.TradeLimitDao">
  <resultMap id="BaseResultMap" type="com.pay.api.client.model.TradeLimitDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="own_type" jdbcType="VARCHAR" property="ownType" />
    <result column="own_id" jdbcType="BIGINT" property="ownId" />
    <result column="own_number" jdbcType="VARCHAR" property="ownNumber" />
    <result column="own_name" jdbcType="VARCHAR" property="ownName" />
    <result column="defrayal_type" jdbcType="VARCHAR" property="defrayalType" />
    <result column="single_trade_amount_min" jdbcType="DECIMAL" property="singleTradeAmountMin" />
    <result column="single_trade_amount_max" jdbcType="DECIMAL" property="singleTradeAmountMax" />
    <result column="day_trade_amount_max" jdbcType="DECIMAL" property="dayTradeAmountMax" />
    <result column="month_trade_amount_max" jdbcType="DECIMAL" property="monthTradeAmountMax" />
    <result column="second_trade_interval" jdbcType="INTEGER" property="secondTradeInterval" />
  </resultMap>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_update, is_deleted, own_type, own_id, own_number, own_name, defrayal_type, 
    single_trade_amount_min, single_trade_amount_max, day_trade_amount_max, month_trade_amount_max, 
    second_trade_interval
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade_limit
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByOwn" resultType="com.pay.api.client.model.TradeLimitDO">
    select
    <include refid="Base_Column_List" />
    from trade_limit
    where is_deleted = 0
    AND own_type = #{ownType,jdbcType=VARCHAR}
    AND own_number = #{ownNumber,jdbcType=VARCHAR}
    AND defrayal_type = #{defrayalType  ,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from trade_limit
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pay.api.client.model.TradeLimitDO">
    insert into trade_limit (id, gmt_create, gmt_update, 
      is_deleted, own_type, own_id, 
      own_number, own_name, defrayal_type, 
      single_trade_amount_min, single_trade_amount_max, 
      day_trade_amount_max, month_trade_amount_max, 
      second_trade_interval)
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtUpdate,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=BIT}, #{ownType,jdbcType=VARCHAR}, #{ownId,jdbcType=BIGINT}, 
      #{ownNumber,jdbcType=VARCHAR}, #{ownName,jdbcType=VARCHAR}, #{defrayalType,jdbcType=VARCHAR}, 
      #{singleTradeAmountMin,jdbcType=DECIMAL}, #{singleTradeAmountMax,jdbcType=DECIMAL}, 
      #{dayTradeAmountMax,jdbcType=DECIMAL}, #{monthTradeAmountMax,jdbcType=DECIMAL}, 
      #{secondTradeInterval,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pay.api.client.model.TradeLimitDO">
    insert into trade_limit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="ownType != null">
        own_type,
      </if>
      <if test="ownId != null">
        own_id,
      </if>
      <if test="ownNumber != null">
        own_number,
      </if>
      <if test="ownName != null">
        own_name,
      </if>
      <if test="defrayalType != null">
        defrayal_type,
      </if>
      <if test="singleTradeAmountMin != null">
        single_trade_amount_min,
      </if>
      <if test="singleTradeAmountMax != null">
        single_trade_amount_max,
      </if>
      <if test="dayTradeAmountMax != null">
        day_trade_amount_max,
      </if>
      <if test="monthTradeAmountMax != null">
        month_trade_amount_max,
      </if>
      <if test="secondTradeInterval != null">
        second_trade_interval,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="ownType != null">
        #{ownType,jdbcType=VARCHAR},
      </if>
      <if test="ownId != null">
        #{ownId,jdbcType=BIGINT},
      </if>
      <if test="ownNumber != null">
        #{ownNumber,jdbcType=VARCHAR},
      </if>
      <if test="ownName != null">
        #{ownName,jdbcType=VARCHAR},
      </if>
      <if test="defrayalType != null">
        #{defrayalType,jdbcType=VARCHAR},
      </if>
      <if test="singleTradeAmountMin != null">
        #{singleTradeAmountMin,jdbcType=DECIMAL},
      </if>
      <if test="singleTradeAmountMax != null">
        #{singleTradeAmountMax,jdbcType=DECIMAL},
      </if>
      <if test="dayTradeAmountMax != null">
        #{dayTradeAmountMax,jdbcType=DECIMAL},
      </if>
      <if test="monthTradeAmountMax != null">
        #{monthTradeAmountMax,jdbcType=DECIMAL},
      </if>
      <if test="secondTradeInterval != null">
        #{secondTradeInterval,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pay.api.client.model.TradeLimitDO">
    update trade_limit
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="ownType != null">
        own_type = #{ownType,jdbcType=VARCHAR},
      </if>
      <if test="ownId != null">
        own_id = #{ownId,jdbcType=BIGINT},
      </if>
      <if test="ownNumber != null">
        own_number = #{ownNumber,jdbcType=VARCHAR},
      </if>
      <if test="ownName != null">
        own_name = #{ownName,jdbcType=VARCHAR},
      </if>
      <if test="defrayalType != null">
        defrayal_type = #{defrayalType,jdbcType=VARCHAR},
      </if>
      <if test="singleTradeAmountMin != null">
        single_trade_amount_min = #{singleTradeAmountMin,jdbcType=DECIMAL},
      </if>
      <if test="singleTradeAmountMax != null">
        single_trade_amount_max = #{singleTradeAmountMax,jdbcType=DECIMAL},
      </if>
      <if test="dayTradeAmountMax != null">
        day_trade_amount_max = #{dayTradeAmountMax,jdbcType=DECIMAL},
      </if>
      <if test="monthTradeAmountMax != null">
        month_trade_amount_max = #{monthTradeAmountMax,jdbcType=DECIMAL},
      </if>
      <if test="secondTradeInterval != null">
        second_trade_interval = #{secondTradeInterval,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pay.api.client.model.TradeLimitDO">
    update trade_limit
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      own_type = #{ownType,jdbcType=VARCHAR},
      own_id = #{ownId,jdbcType=BIGINT},
      own_number = #{ownNumber,jdbcType=VARCHAR},
      own_name = #{ownName,jdbcType=VARCHAR},
      defrayal_type = #{defrayalType,jdbcType=VARCHAR},
      single_trade_amount_min = #{singleTradeAmountMin,jdbcType=DECIMAL},
      single_trade_amount_max = #{singleTradeAmountMax,jdbcType=DECIMAL},
      day_trade_amount_max = #{dayTradeAmountMax,jdbcType=DECIMAL},
      month_trade_amount_max = #{monthTradeAmountMax,jdbcType=DECIMAL},
      second_trade_interval = #{secondTradeInterval,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>